// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PedagangPulsa.API.Database;

#nullable disable

namespace PedagangPulsa.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241014133546_AddKategoriProdukTable")]
    partial class AddKategoriProdukTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("CallbackPaymentDuitku", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("amount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("created_date")
                        .HasColumnType("TEXT");

                    b.Property<int>("fee")
                        .HasColumnType("INTEGER");

                    b.Property<string>("reference")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("statusCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("statusMessage")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("CallbackPaymentDuitku");
                });

            modelBuilder.Entity("PedagangPulsa.API.Database.Entity.DetailProduk", b =>
                {
                    b.Property<int>("ProdukID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Harga")
                        .HasColumnType("INTEGER");

                    b.Property<int>("KategoriID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Kode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("ProdukID");

                    b.ToTable("DetailProduk");
                });

            modelBuilder.Entity("PedagangPulsa.API.Database.Entity.KategoriProduk", b =>
                {
                    b.Property<int>("KategoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Kategori")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("KategoriID");

                    b.ToTable("KategoriProduk");
                });

            modelBuilder.Entity("PedagangPulsa.API.Database.Entity.Produk", b =>
                {
                    b.Property<string>("Vendor")
                        .HasColumnType("TEXT");

                    b.Property<string>("Kode")
                        .HasColumnType("TEXT");

                    b.Property<int>("Harga")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Kategory")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("deskripsi_produk")
                        .HasColumnType("TEXT");

                    b.Property<int>("kategory_Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("nama_produk")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Vendor", "Kode");

                    b.ToTable("Produk");
                });

            modelBuilder.Entity("PedagangPulsa.API.Database.Entity.Transaksi", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("IdPembeli")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdUser")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("TanggalKonfirmasi")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TanggalTransaksi")
                        .HasColumnType("TEXT");

                    b.Property<int>("harga_agen")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("harga_jual")
                        .HasColumnType("INTEGER");

                    b.Property<int>("id_vendor")
                        .HasColumnType("INTEGER");

                    b.Property<string>("kode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nama_produk")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("no_tujuan")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("sn")
                        .HasColumnType("TEXT");

                    b.Property<string>("status_transaksi")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Transaksi");
                });

            modelBuilder.Entity("PedagangPulsa.API.Database.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Alamat")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("IsVerived")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastOTP")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LastTransaksi")
                        .HasColumnType("TEXT");

                    b.Property<string>("NamaLengkap")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NoWA")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PinTransaksi")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Register")
                        .HasColumnType("TEXT");

                    b.Property<int>("Saldo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telegram")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
